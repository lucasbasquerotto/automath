from env import core

Map: core.FunctionExpr = core.FunctionExpr(
    core.Protocol(
        core.TypeAliasGroup(
            core.TypeAlias(
                core.INode.as_type()
            ),
            core.TypeAlias(
                core.INode.as_type()
            ),
        ),
        core.CountableTypeGroup(
            core.FunctionType(
                core.CountableTypeGroup(core.TypeIndex(1)),
                core.TypeIndex(2),
            ),
            core.CompositeType(
                core.BaseGroup.as_type(),
                core.RestTypeGroup(
                    core.LazyTypeIndex(1),
                ),
            ),
        ),
        core.CompositeType(
            core.DefaultGroup.as_type(),
            core.RestTypeGroup(
                core.LazyTypeIndex(2),
            ),
        ),
    ),
    core.InnerArg(
        core.Loop(
            core.FunctionExpr(
                core.Protocol(
                    core.TypeAliasGroup(
                        core.TypeAlias(
                            core.INode.as_type()
                        ),
                        core.TypeAlias(
                            core.INode.as_type()
                        ),
                    ),
                    core.CountableTypeGroup(
                        core.CompositeType(
                            core.Optional.as_type(),
                            core.CountableTypeGroup(
                                core.CompositeType(
                                    core.DefaultGroup.as_type(),
                                    core.CountableTypeGroup(
                                        core.FunctionType(
                                            core.CountableTypeGroup(core.TypeIndex(1)),
                                            core.TypeIndex(2),
                                        ),
                                        core.IIterator.as_type(),
                                        core.CompositeType(
                                            core.DefaultGroup.as_type(),
                                            core.RestTypeGroup(
                                                core.LazyTypeIndex(2),
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                    core.UnionType(
                        core.CompositeType(
                            core.LoopGuard.as_type(),
                            core.CountableTypeGroup(
                                core.InstanceType(core.IBoolean.true()),
                                core.CompositeType(
                                    core.DefaultGroup.as_type(),
                                    core.CountableTypeGroup(
                                        core.FunctionType(
                                            core.CountableTypeGroup(core.TypeIndex(1)),
                                            core.TypeIndex(2),
                                        ),
                                        core.CompositeType(
                                            core.GroupIterator.as_type(),
                                            core.CountableTypeGroup(
                                                core.CompositeType(
                                                    core.BaseGroup.as_type(),
                                                    core.RestTypeGroup(
                                                        core.LazyTypeIndex(1),
                                                    ),
                                                ),
                                                core.NodeArgIndex.as_type(),
                                            ),
                                        ),
                                        core.CompositeType(
                                            core.DefaultGroup.as_type(),
                                            core.RestTypeGroup(
                                                core.LazyTypeIndex(2),
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                        core.CompositeType(
                            core.LoopGuard.as_type(),
                            core.CountableTypeGroup(
                                core.InstanceType(core.IBoolean.false()),
                                core.CompositeType(
                                    core.DefaultGroup.as_type(),
                                    core.RestTypeGroup(
                                        core.LazyTypeIndex(2),
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
                core.InstructionGroup(
                    core.Assign(
                        core.PlaceholderIndex(1),
                        core.NestedArg.from_raw(
                            node=core.Param.from_int(1),
                            indices=(1, 1),
                        ),
                    ),
                    core.Assign(
                        core.PlaceholderIndex(2),
                        core.NestedArg.from_raw(
                            node=core.Param.from_int(1),
                            indices=(1, 2),
                        ),
                    ),
                    core.Assign(
                        core.PlaceholderIndex(2),
                        core.Next(core.Var.from_int(2))
                    ),
                    core.Assign(
                        core.PlaceholderIndex(3),
                        core.NestedArg.from_raw(
                            node=core.Param.from_int(1),
                            indices=(1, 3),
                        ),
                    ),
                    core.Return.with_node(
                        core.If(
                            core.IsEmpty(core.Var.from_int(2)),
                            core.LoopGuard.with_args(
                                condition=core.IBoolean.false(),
                                result=core.Var.from_int(3),
                            ),
                            core.LoopGuard.with_args(
                                condition=core.IBoolean.true(),
                                result=core.DefaultGroup(
                                    core.Var.from_int(1),
                                    core.NestedArg.from_raw(
                                        node=core.Var.from_int(2),
                                        indices=(1, 1),
                                    ),
                                    core.Add(
                                        core.Var.from_int(3),
                                        core.DefaultGroup(
                                            core.FunctionCall(
                                                core.Var.from_int(1),
                                                core.DefaultGroup(
                                                    core.NestedArg.from_raw(
                                                        node=core.Var.from_int(2),
                                                        indices=(1, 2),
                                                    ),
                                                ),
                                            ),
                                        ),
                                    ),
                                ),
                            ),
                        ),
                    ),
                ),
            ),
            core.Optional(
                core.DefaultGroup(
                    core.Param.from_int(1),
                    core.GroupIterator.with_node(
                        core.Param.from_int(2),
                    ),
                    core.DefaultGroup(),
                ),
            ),
        ),
        core.NodeArgIndex(1),
    ),
)
